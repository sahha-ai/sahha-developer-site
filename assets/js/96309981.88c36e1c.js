"use strict";(self.webpackChunksahha_developer_site=self.webpackChunksahha_developer_site||[]).push([[3539],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),i=n(6010);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>S});var a=n(7462),i=n(7294),r=n(6010),o=n(2466),l=n(6550),s=n(1980),c=n(7392),p=n(12);function u(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??u(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,c]=h({queryString:n,groupId:a}),[u,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,p.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),f=(()=>{const e=s??u;return m({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),g(e)}),[c,g,r]),tabValues:r}}var f=n(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:c}=e;const p=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=p.indexOf(t),a=c[n].value;a!==l&&(u(t),s(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=p.indexOf(e.currentTarget)+1;t=p[n]??p[0];break}case"ArrowLeft":{const n=p.indexOf(e.currentTarget)-1;t=p[n]??p[p.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},c.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},o,{className:(0,r.Z)("tabs__item",k.tabItem,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function b(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function y(e){const t=g(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",k.tabList)},i.createElement(v,(0,a.Z)({},e,t)),i.createElement(b,(0,a.Z)({},e,t)))}function S(e){const t=(0,f.Z)();return i.createElement(y,(0,a.Z)({key:String(t)},e))}},3139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>u});var a=n(7462),i=(n(7294),n(3905)),r=n(4866),o=n(5162);const l={sidebar_position:1},s="Configuration",c={unversionedId:"use-the-sdk/configuration",id:"use-the-sdk/configuration",title:"Configuration",description:"You will need to configure the Sahha SDK before you can use it.",source:"@site/docs/use-the-sdk/configuration.md",sourceDirName:"use-the-sdk",slug:"/use-the-sdk/configuration",permalink:"/sahha-developer-site/docs/use-the-sdk/configuration",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Use the SDK",permalink:"/sahha-developer-site/docs/category/use-the-sdk"},next:{title:"Profile",permalink:"/sahha-developer-site/docs/use-the-sdk/profile"}},p={},u=[{value:"Configure",id:"configure",level:2},{value:"Environment Settings",id:"environment-settings",level:2},{value:"Sensor Settings",id:"sensor-settings",level:2},{value:"Notifications",id:"notifications",level:2},{value:"Custom Notification Icon",id:"custom-notification-icon",level:3},{value:"Step 1) Open your project in Android Studio.",id:"step-1-open-your-project-in-android-studio",level:4},{value:"Step 2) With the app folder highlighted, select<code>File</code> \u2192 <code>New</code> \u2192 <code>Image Asset</code>.",id:"step-2-with-the-app-folder-highlighted-selectfile--new--image-asset",level:4},{value:"Step 3) Select <code>Notification Icons</code> for <code>Icon Type</code>, enter a <code>Name</code>, select <code>Image</code> as <code>Asset Type</code> and alter the <code>Padding</code> as desired.",id:"step-3-select-notification-icons-for-icon-type-enter-a-name-select-image-as-asset-type-and-alter-the-padding-as-desired",level:4},{value:"Step 4) This page can typically be left as it is. Select <code>Finish</code>.",id:"step-4-this-page-can-typically-be-left-as-it-is-select-finish",level:4},{value:"Custom Notification Settings",id:"custom-notification-settings",level:3},{value:"Default Notification Settings",id:"default-notification-settings",level:3}],d={toc:u},m="wrapper";function h(e){let{components:t,...l}=e;return(0,i.kt)(m,(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configuration"},"Configuration"),(0,i.kt)("p",null,"You will need to configure the Sahha SDK before you can use it."),(0,i.kt)("admonition",{title:"Configure the SDK immediately",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The Sahha SDK must be configured immediately on app launch.")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"configure"},"Configure"),(0,i.kt)("p",null,"Choose your specific platform from the options below."),(0,i.kt)(r.Z,{groupId:"os",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"ios",label:"iOS (SwiftUI)",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title=MyApp.swift",title:"MyApp.swift"},'import SwiftUI\n// highlight-next-line\nimport Sahha\n\n@main\nstruct MyApp: App {\n\n  // highlight-next-line\n  // Configure Sahha inside `init` of your app\'s `App` view.\n    \n  init() {\n    // highlight-start\n    let settings = SahhaSettings(environment: .development)\n    Sahha.configure(settings) {\n      // SDK is ready to use\n      print("SDK Ready")\n    }\n    // highlight-end\n  }\n\n  var body: some Scene {\n    WindowGroup {\n      ContentView()\n    }\n  }\n    \n}\n'))),(0,i.kt)(o.Z,{value:"ios-uikit",label:"iOS (UIKit)",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift",metastring:"title=AppDelegate.swift",title:"AppDelegate.swift"},'\nimport UIKit\n// highlight-next-line\nimport Sahha\n\n@main\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n// highlight-next-line\n// Configure Sahha inside `application didFinishLaunchingWithOptions` of your app\'s `AppDelegate`.\n\n  func application(_: UIApplication, didFinishLaunchingWithOptions _: [UIApplication.LaunchOptionsKey: Any]? = nil) -> Bool {\n  // highlight-start\n    let settings = SahhaSettings(\n      environment: .development, // Required - .development for testing\n      sensors: [.sleep] // Optional - defaults to all sensors\n    )\n    Sahha.configure(settings) {\n      // SDK is ready to use\n      print("SDK Ready")\n    }\n    // highlight-end\n    return true\n  }\n\n}\n'))),(0,i.kt)(o.Z,{value:"android",label:"Android",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"title=MainActivity.kt",title:"MainActivity.kt"},'\n// highlight-next-line\nimport sdk.sahha.android.source.*\n\n// highlight-next-line\n// Configure Sahha inside `onCreate` of your app\'s `MainActivity`.\n\nclass MainActivity : ComponentActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n// highlight-start\n        // You can specify optional custom notification settings\n        val notificationSettings = SahhaNotificationConfiguration(\n            icon = R.drawable.ic_test, // The icon id must match the filename you add to the project\n            title = "Custom Title",\n            shortDescription = "Custom description",\n        )\n\n        val settings = SahhaSettings (\n            environment = SahhaEnvironment.development,\n            notificationSettings = notificationSettings, // Optional - defaults to null\n            sensors = [.pedometer, .sleep], // Optional - defaults to all avaialable sensors\n        )\n\n        Sahha.configure(application, settings) { error, success ->\n            if (error != null) {\n                println(error)\n            } else {\n                println(success.toString())\n            }\n        }\n        // highlight-end\n    }\n}\n'))),(0,i.kt)(o.Z,{value:"flutter",label:"Flutter",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart",metastring:"title=MyApp.dart",title:"MyApp.dart"},"\nimport 'package:sahha_flutter/sahha_flutter.dart';\n\n// Configure Sahha inside `initState` of your app's `AppState`.\n\nclass _MyAppState extends State<MyApp> {\n\n  @override\n  void initState() {\n      super.initState();\n\n    // Optional - Android only\n    var notificationSettings = {\n      'icon': 'Custom Icon',\n      'title': 'Custom Title',\n      'shortDescription': 'Custom Description'\n    };\n\n      // Use custom values\n      SahhaFlutter.configure(\n          environment: SahhaEnvironment.production, // Required - .development for testing\n          sensors: [SahhaSensor.device] // Optional - defaults to all sensors\n      .then((success) => {\n          debugPrint(success.toString())\n        })\n      .catchError((error, stackTrace) => {\n          debugPrint(error.toString())\n        });\n  }\n}\n"))),(0,i.kt)(o.Z,{value:"react-native",label:"React Native",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=MyApp.tsx",title:"MyApp.tsx"},'\nimport Sahha, { SahhaEnvironment, SahhaSensor } from "sahha-react-native";\n\n// Configure Sahha inside your App\'s `export function`.\n\nexport default function App() {\n  // Use custom values\n  const settings = {\n    environment: SahhaEnvironment.production, // Required -  .development for testing\n    // Optional - Android only\n    notificationSettings: {\n      icon: "ic_test",\n      title: "Test Title",\n      shortDescription: "Test description.",\n    },\n    sensors: [SahhaSensor.sleep, SahhaSensor.pedometer], // Optional - defaults to all sensors\n  };\n  Sahha.configure(settings, (error: string, success: boolean) => {\n    console.log(`Success: ${success}`);\n    if (error) {\n      console.error(`Error: ${error}`);\n    }\n  });\n}\n'))),(0,i.kt)(o.Z,{value:"ionic",label:"Ionic / Capacitor",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"title=MyApp.tsx",title:"MyApp.tsx"},'import {\n  Sahha,\n  SahhaSensor,\n  SahhaEnvironment,\n  SahhaSettings,\n} from "sahha-capacitor";\n\n// Configure Sahha inside your App\'s `export function`.\n\nconst App: React.FC = () => {\n  const settings: SahhaSettings = {\n    environment: SahhaEnvironment.production, // Required -  .development for testing\n    sensors: [SahhaSensor.sleep], // Optional - defaults to all sensors\n    // Optional - Android only\n    notificationSettings: {\n      icon: "ic_test",\n      title: "Test Title",\n      shortDescription: "Test description.",\n    },\n  };\n\n  Sahha.configure({ settings: settings })\n    .then((data) => {\n      console.log(`Success: ${data.success}`);\n    })\n    .catch((error: Error) => {\n      console.error(error);\n    });\n};\n\n')))),(0,i.kt)("h2",{id:"environment-settings"},"Environment Settings"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"SahhaEnvironment")," determines if the SDK connects to the ",(0,i.kt)("inlineCode",{parentName:"p"},"development")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"production")," server of the API. Setting this incorrectly will send data to the wrong server."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"SahhaEnvironment"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"development"),(0,i.kt)("td",{parentName:"tr",align:null},"For development and testing")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"production"),(0,i.kt)("td",{parentName:"tr",align:null},"For submission to the App store")))),(0,i.kt)(r.Z,{groupId:"os",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"ios",label:"iOS",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public enum SahhaEnvironment: String {\n    case development\n    case production\n}\n"))),(0,i.kt)(o.Z,{value:"android",label:"Android",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"enum class SahhaEnvironment {\n    development,\n    production\n}\n"))),(0,i.kt)(o.Z,{value:"flutter",label:"Flutter",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"enum SahhaEnvironment {\n  development,\n  production\n}\n"))),(0,i.kt)(o.Z,{value:"react-native",label:"React Native",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"enum SahhaEnvironment {\n  development,\n  production\n}\n"))),(0,i.kt)(o.Z,{value:"ionic",label:"Ionic / Capacitor",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"enum SahhaEnvironment {\n  development,\n  production\n}\n")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"sensor-settings"},"Sensor Settings"),(0,i.kt)("p",null,"You can specify which sensors for the Sahha SDK to use. To optimize your analysis result, we suggest enabling all sensors. Leave this value null to enable all sensors by default."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Some sensors are not available on all platforms.")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"SahhaSensor"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Android"),(0,i.kt)("th",{parentName:"tr",align:"center"},"iOS"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"sleep"),(0,i.kt)("td",{parentName:"tr",align:null},"For tracking sleep patterns"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"pedometer"),(0,i.kt)("td",{parentName:"tr",align:null},"For tracking walking patterns"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"device"),(0,i.kt)("td",{parentName:"tr",align:null},"For tracking device usage patterns"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713"),(0,i.kt)("td",{parentName:"tr",align:"center"},"X")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"heart"),(0,i.kt)("td",{parentName:"tr",align:null},"For tracking heart patterns (rate, variability)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"X"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"blood"),(0,i.kt)("td",{parentName:"tr",align:null},"For tracking blood patterns (pressure, glucose)"),(0,i.kt)("td",{parentName:"tr",align:"center"},"X"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u2713")))),(0,i.kt)(r.Z,{groupId:"os",mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"ios",label:"iOS",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public enum SahhaSensor: String, CaseIterable {\n    case sleep\n    case pedometer\n    case device\n    case heart\n    case blood\n}\n"))),(0,i.kt)(o.Z,{value:"android",label:"Android",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"enum class SahhaSensor {\n    device,\n    sleep,\n    pedometer,\n    heart,\n    blod\n}\n"))),(0,i.kt)(o.Z,{value:"flutter",label:"Flutter",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"enum SahhaSensor {\n  sleep,\n  pedometer,\n  device,\n  heart,\n  blood\n}\n"))),(0,i.kt)(o.Z,{value:"react-native",label:"React Native",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"enum SahhaSensor {\n  sleep,\n  pedometer,\n  device,\n  heart,\n  blood\n}\n"))),(0,i.kt)(o.Z,{value:"ionic",label:"Ionic / Capacitor",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"enum SahhaSensor {\n  sleep,\n  pedometer,\n  device,\n  heart,\n  blood\n}\n")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"notifications"},"Notifications"),(0,i.kt)("p",null,"You can customize notifications for any platform that includes an Android app."),(0,i.kt)("admonition",{title:"You can customize notifications for the following platforms:",type:"tip"},(0,i.kt)("ul",{parentName:"admonition",className:"contains-task-list"},(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Android"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Flutter (Android only)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","React Native (Android only)"),(0,i.kt)("li",{parentName:"ul",className:"task-list-item"},(0,i.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","Ionic / Capacitor (Android only)")),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("em",{parentName:"p"},(0,i.kt)("strong",{parentName:"em"},"iOS apps not supported")))),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"custom-notification-icon"},"Custom Notification Icon"),(0,i.kt)("p",null,"You can add an optional custom notification icon to your Android app."),(0,i.kt)("admonition",{title:"How to create app icons with Image Asset Studio",type:"info"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/write/image-asset-studio#image"},"Click here for more info"))),(0,i.kt)("h4",{id:"step-1-open-your-project-in-android-studio"},"Step 1) Open your project in Android Studio."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(1548).Z,width:"1580",height:"866"})),(0,i.kt)("h4",{id:"step-2-with-the-app-folder-highlighted-selectfile--new--image-asset"},"Step 2) With the app folder highlighted, select",(0,i.kt)("inlineCode",{parentName:"h4"},"File")," \u2192 ",(0,i.kt)("inlineCode",{parentName:"h4"},"New")," \u2192 ",(0,i.kt)("inlineCode",{parentName:"h4"},"Image Asset"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(3785).Z,width:"1450",height:"940"})),(0,i.kt)("h4",{id:"step-3-select-notification-icons-for-icon-type-enter-a-name-select-image-as-asset-type-and-alter-the-padding-as-desired"},"Step 3) Select ",(0,i.kt)("inlineCode",{parentName:"h4"},"Notification Icons")," for ",(0,i.kt)("inlineCode",{parentName:"h4"},"Icon Type"),", enter a ",(0,i.kt)("inlineCode",{parentName:"h4"},"Name"),", select ",(0,i.kt)("inlineCode",{parentName:"h4"},"Image")," as ",(0,i.kt)("inlineCode",{parentName:"h4"},"Asset Type")," and alter the ",(0,i.kt)("inlineCode",{parentName:"h4"},"Padding")," as desired."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6436).Z,width:"2036",height:"1418"})),(0,i.kt)("h4",{id:"step-4-this-page-can-typically-be-left-as-it-is-select-finish"},"Step 4) This page can typically be left as it is. Select ",(0,i.kt)("inlineCode",{parentName:"h4"},"Finish"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(7623).Z,width:"2056",height:"1412"})),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"custom-notification-settings"},"Custom Notification Settings"),(0,i.kt)("p",null,"You can specify optional custom ",(0,i.kt)("inlineCode",{parentName:"p"},"notificationSettings"),". If ",(0,i.kt)("inlineCode",{parentName:"p"},"notificationSettings")," are not specified, then the app will use the default notification settings."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"title=Android",title:"Android"},'val notificationSettings = SahhaNotificationConfiguration(\n    icon = R.drawable.ic_test, // The icon id must match the filename you add to the project\n    title = "Custom Title",\n    shortDescription = "Custom description",\n)\n')),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"default-notification-settings"},"Default Notification Settings"),(0,i.kt)("p",null,"If custom ",(0,i.kt)("inlineCode",{parentName:"p"},"notificationSettings")," are not specified, then the app will use the default notification settings. If custom ",(0,i.kt)("inlineCode",{parentName:"p"},"notificationSettings")," are only partially specified, then the app will use the default notification settings.The app will fill in the missing notification parameters with default values. E.g. if an ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," are provided but a ",(0,i.kt)("inlineCode",{parentName:"p"},"shortDescription")," is not, then the ",(0,i.kt)("inlineCode",{parentName:"p"},"shortDescription")," will use the default value."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:"title=Android",title:"Android"},'val icon = R.drawable.ic_sahha_no_bg // The Sahha logo\nval title = "Analytics are running"\nval shortDescription = "Swipe for options to hide this notification."\n')))}h.isMDXComponent=!0},1548:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/custom_notifications_1-5224119a24d7e29d659369a6cda7ac73.png"},3785:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/custom_notifications_2-91a6d94cc24de8311c3386e73e95b959.png"},6436:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/custom_notifications_3-156b49d07cbe686750a7c19cf5fde0e3.png"},7623:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/custom_notifications_4-1cf7085cebec96e283d4f574e4ca21b4.png"}}]);